{"ast":null,"code":"var _jsxFileName = \"Y:\\\\qut-web_dev_bootcamp\\\\Server_C#_SQL_test\\\\chatgptproject\\\\client\\\\my-react-app\\\\src\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = () => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  useEffect(() => {\n    // Make a GET request to your API endpoint\n    axios.get('https://localhost:7081/WeatherForecast').then(response => setForecastData(response.data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecastData.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [forecast.date, \" - \", forecast.temperatureC, \"\\xB0C (\", forecast.temperatureF, \"\\xB0F) - \", forecast.summary]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"ICMKhofs5jc8xe0gv6oPHbIvfl4=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WeatherForecast","_s","forecastData","setForecastData","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","forecast","index","date","temperatureC","temperatureF","summary","_c","$RefreshReg$"],"sources":["Y:/qut-web_dev_bootcamp/Server_C#_SQL_test/chatgptproject/client/my-react-app/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WeatherForecast = () => {\r\n  const [forecastData, setForecastData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Make a GET request to your API endpoint\r\n    axios.get('https://localhost:7081/WeatherForecast')\r\n      .then(response => setForecastData(response.data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Forecast</h2>\r\n      <ul>\r\n        {forecastData.map((forecast, index) => (\r\n          <li key={index}>\r\n            {forecast.date} - {forecast.temperatureC}°C ({forecast.temperatureF}°F) - {forecast.summary}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACO,GAAG,CAAC,wCAAwC,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAChDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhB,OAAA;MAAAY,QAAA,EACGT,YAAY,CAACc,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChCnB,OAAA;QAAAY,QAAA,GACGM,QAAQ,CAACE,IAAI,EAAC,KAAG,EAACF,QAAQ,CAACG,YAAY,EAAC,SAAI,EAACH,QAAQ,CAACI,YAAY,EAAC,WAAM,EAACJ,QAAQ,CAACK,OAAO;MAAA,GADpFJ,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAwBrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}