{"ast":null,"code":"var _jsxFileName = \"Y:\\\\qut-web_dev_bootcamp\\\\Server_C#_SQL_test\\\\ASP.NET-Server-Play\\\\my-react-app\\\\src\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = () => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://localhost:7057/api/Products', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setForecastData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecastData.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [forecast.date, \" - \", forecast.temperatureC, \"\\xB0C (\", forecast.temperatureF, \"\\xB0F) - \", forecast.summary]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"ICMKhofs5jc8xe0gv6oPHbIvfl4=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherForecast","_s","forecastData","setForecastData","fetchData","response","fetch","method","credentials","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","forecast","index","date","temperatureC","temperatureF","summary","_c","$RefreshReg$"],"sources":["Y:/qut-web_dev_bootcamp/Server_C#_SQL_test/ASP.NET-Server-Play/my-react-app/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherForecast = () => {\r\n  const [forecastData, setForecastData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://localhost:7057/api/Products', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setForecastData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Forecast</h2>\r\n      <ul>\r\n        {forecastData.map((forecast, index) => (\r\n          <li key={index}>\r\n            {forecast.date} - {forecast.temperatureC}°C ({forecast.temperatureF}°F) - {forecast.summary}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCT,eAAe,CAACQ,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA;MAAAgB,QAAA,EACGb,YAAY,CAACkB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChCvB,OAAA;QAAAgB,QAAA,GACGM,QAAQ,CAACE,IAAI,EAAC,KAAG,EAACF,QAAQ,CAACG,YAAY,EAAC,SAAI,EAACH,QAAQ,CAACI,YAAY,EAAC,WAAM,EAACJ,QAAQ,CAACK,OAAO;MAAA,GADpFJ,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}