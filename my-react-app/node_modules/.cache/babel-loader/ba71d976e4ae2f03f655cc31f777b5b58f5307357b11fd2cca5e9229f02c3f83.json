{"ast":null,"code":"var _jsxFileName = \"Y:\\\\qut-web_dev_bootcamp\\\\Server_C#_SQL_test\\\\ASP.NET-Server-Play\\\\my-react-app\\\\src\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = () => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://localhost:7057/api/Products', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setForecastData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handlePostRequest = async () => {\n    try {\n      const response = await fetch('https://localhost:7057/api/Products', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productData)\n      });\n      if (!response.ok) {\n        // Handle the error here\n        console.error('Failed to create product:', response.statusText);\n        return;\n      }\n      const result = await response.json();\n      console.log('Product created successfully:', result);\n\n      // Handle the response as needed\n\n      // Clear the input fields after successful submission\n      setProductData({\n        id: 0,\n        name: '',\n        type: ''\n      });\n    } catch (error) {\n      console.error('Error while creating product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Product ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: productData.id,\n        onChange: e => setProductData({\n          ...productData,\n          id: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePostRequest,\n      children: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecastData.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.id, \" - \", product.name, \" (\", product.type, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"ICMKhofs5jc8xe0gv6oPHbIvfl4=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherForecast","_s","forecastData","setForecastData","fetchData","response","fetch","method","credentials","ok","Error","data","json","error","console","handlePostRequest","headers","body","JSON","stringify","productData","statusText","result","log","setProductData","id","name","type","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","map","product","index","_c","$RefreshReg$"],"sources":["Y:/qut-web_dev_bootcamp/Server_C#_SQL_test/ASP.NET-Server-Play/my-react-app/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst WeatherForecast = () => {\r\n  const [forecastData, setForecastData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://localhost:7057/api/Products', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setForecastData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePostRequest = async () => {\r\n    try {\r\n      const response = await fetch('https://localhost:7057/api/Products', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(productData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Handle the error here\r\n        console.error('Failed to create product:', response.statusText);\r\n        return;\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('Product created successfully:', result);\r\n      \r\n      // Handle the response as needed\r\n\r\n      // Clear the input fields after successful submission\r\n      setProductData({\r\n        id: 0,\r\n        name: '',\r\n        type: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error while creating product:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Forecast</h2>\r\n      <label>\r\n        Product ID:\r\n        <input\r\n          type=\"text\"\r\n          value={productData.id}\r\n          onChange={(e) => setProductData({ ...productData, id: e.target.value })}\r\n        />\r\n      </label>\r\n      <button onClick={handlePostRequest}>Create Product</button>\r\n      <ul>\r\n        {forecastData.map((product, index) => (\r\n          <li key={index}>\r\n            {product.id} - {product.name} ({product.type}) \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}