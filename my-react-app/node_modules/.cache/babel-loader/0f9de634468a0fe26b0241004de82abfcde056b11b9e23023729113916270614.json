{"ast":null,"code":"var _jsxFileName = \"Y:\\\\qut-web_dev_bootcamp\\\\Server_C#_SQL_test\\\\ASP.NET-Server-Play\\\\my-react-app\\\\src\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecast = () => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://localhost:7057/api/Products', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setForecastData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecastData.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.id, \" - \", product.name, \" (\", product.type, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Product Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: productData.name,\n        onChange: e => handleProductChange('name', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Product Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: productData.type,\n        onChange: e => handleProductChange('type', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n      productData: productData,\n      setProductData: setProductData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"ICMKhofs5jc8xe0gv6oPHbIvfl4=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherForecast","_s","forecastData","setForecastData","fetchData","response","fetch","method","credentials","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","index","id","name","type","value","productData","onChange","e","handleProductChange","target","setProductData","_c","$RefreshReg$"],"sources":["Y:/qut-web_dev_bootcamp/Server_C#_SQL_test/ASP.NET-Server-Play/my-react-app/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherForecast = () => {\r\n  const [forecastData, setForecastData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://localhost:7057/api/Products', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setForecastData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Forecast</h2>\r\n      <ul>\r\n        {forecastData.map((product, index) => (\r\n          <li key={index}>\r\n            {product.id} - {product.name} ({product.type}) \r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <label>\r\n        Product Name:\r\n        <input\r\n          type=\"text\"\r\n          value={productData.name}\r\n          onChange={(e) => handleProductChange('name', e.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Product Type:\r\n        <input\r\n          type=\"text\"\r\n          value={productData.type}\r\n          onChange={(e) => handleProductChange('type', e.target.value)}\r\n        />\r\n      </label>\r\n      <WeatherForecast productData={productData} setProductData={setProductData} />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default WeatherForecast;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCT,eAAe,CAACQ,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA;MAAAgB,QAAA,EACGb,YAAY,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BvB,OAAA;QAAAgB,QAAA,GACGM,OAAO,CAACE,EAAE,EAAC,KAAG,EAACF,OAAO,CAACG,IAAI,EAAC,IAAE,EAACH,OAAO,CAACI,IAAI,EAAC,GAC/C;MAAA,GAFSH,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLpB,OAAA;MAAAgB,QAAA,GAAO,eAEL,eAAAhB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEC,WAAW,CAACH,IAAK;QACxBI,QAAQ,EAAGC,CAAC,IAAKC,mBAAmB,CAAC,MAAM,EAAED,CAAC,CAACE,MAAM,CAACL,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRpB,OAAA;MAAAgB,QAAA,GAAO,eAEL,eAAAhB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEC,WAAW,CAACF,IAAK;QACxBG,QAAQ,EAAGC,CAAC,IAAKC,mBAAmB,CAAC,MAAM,EAAED,CAAC,CAACE,MAAM,CAACL,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRpB,OAAA,CAACC,eAAe;MAAC2B,WAAW,EAAEA,WAAY;MAACK,cAAc,EAAEA;IAAe;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAGV,CAAC;AAAClB,EAAA,CAvDID,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAyDrB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}